//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB)
// Reference Implementation, v2.2.6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source
// schema.
// Generated on: 2013.08.05 at 11:46:51 PM EDT
//


package io.sarvika.cxml.model;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "",
    propOrder = {
        "name",
        "searchDataElement"
    })
@XmlRootElement(name = "SearchGroupData")
public class SearchGroupData {

  @XmlElement(name = "Name", required = true)
  protected Name name;
  @XmlElement(name = "SearchDataElement")
  protected List<SearchDataElement> searchDataElement;

  /**
   * Gets the value of the name property.
   * 
   * @return possible object is {@link Name }
   * 
   */
  public Name getName() {
    return name;
  }

  /**
   * Sets the value of the name property.
   * 
   * @param value allowed object is {@link Name }
   * 
   */
  public void setName(Name value) {
    this.name = value;
  }

  /**
   * Gets the value of the searchDataElement property.
   * 
   * <p>
   * This accessor method returns a reference to the live list, not a snapshot.
   * Therefore any modification you make to the returned list will be present
   * inside the JAXB object. This is why there is not a <CODE>set</CODE> method
   * for the searchDataElement property.
   * 
   * <p>
   * For example, to add a new item, do as follows:
   * 
   * <pre>
   * getSearchDataElement().add(newItem);
   * </pre>
   * 
   * 
   * <p>
   * Objects of the following type(s) are allowed in the list
   * {@link SearchDataElement }
   * 
   * 
   */
  public List<SearchDataElement> getSearchDataElement() {
    if (searchDataElement == null) {
      searchDataElement = new ArrayList<SearchDataElement>();
    }
    return this.searchDataElement;
  }

}
